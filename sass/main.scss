$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-gray-dark: #777777;
$color-white: #ffffff;

/* Basic reset */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777777;
  padding: 3rem;

  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url('../img/hero.jpg');
  background-size: cover;
  background-position: top;
  position: relative;

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  margin-bottom: 6rem;

  /* This fixes the "shake" during animations 
  (usually this is used to determine whats visible when rotating object) */
  backface-visibility: hidden;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;

  /*
   animation-iteration-count: 3;
   animation-delay: 3s; 
  */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;

  animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
  /* Animation start */
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  /* Animation midway */
  80% {
    transform: translateX(1rem);
  }

  /* Animation end */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  /* Animation start */
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  /* Animation midway */
  80% {
    transform: translateX(-1rem);
  }

  /* Animation end */
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  position: relative;
  display: inline-block;
  font-size: 1.6rem;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  border-radius: 10rem;
  /* Enables animation on all properties. Because of this the transform (and other properties) in :hover and :active will be animated in 0.2 seconds */
  transition: all 0.2s;
}

.btn:hover {
  transform: translateY(-3px);
  /* x offset, y offset, blur, color */
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: $color-white;
  color: $color-gray-dark;
}

.btn::after {
  /* We have to always specify the content (even when its empty) and display or this element won't appear */
  content: '';
  display: inline-block;
  /* Pseudo element is treated like a child so setting 100%s here will mean 100% of parent (In our case button) */
  height: 100%;
  width: 100%;

  border-radius: 10rem;

  /* Put the element behind the button */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  /* Animate all properties - transform, opacity, color etc. on btn::after pseudo element */
  transition: all 0.4s;
}

.btn--white::after {
  background-color: $color-white;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--animated {
  animation: moveInBottom 0.5s ease-out 0.75s;
  /* Apply the properties of 0% even BEFORE the animation starts */
  animation-fill-mode: backwards;
}
